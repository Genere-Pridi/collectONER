/**************************************************************************************************
 GRADLE CONFIG
 *************************************************************************************************/

apply plugin: 'com.android.application'
apply plugin: 'checkstyle'

com.android.ddmlib.DdmPreferences.setTimeOut(60000)

android {
    compileSdkVersion(25)
    buildToolsVersion("25.0.0")
    defaultConfig {
        applicationId("org.odk.collect.android")
        minSdkVersion(19)
        multiDexEnabled true
        targetSdkVersion(25)
        versionCode(1063)
        versionName("1.4.12")
        testInstrumentationRunner("android.support.test.runner.AndroidJUnitRunner")
    }
    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            minifyEnabled(true)
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable(true)
            // Allows AndroidTest JaCoCo reports to be generated
            testCoverageEnabled(true)
        }
    }
    packagingOptions {
        // Pick first occurrence of any files that cause conflicts, as defined
        // in common.gradle
        pickFirst 'META-INF/DEPENDENCIES'
        pickFirst 'META-INF/LICENSE'
        pickFirst 'META-INF/LICENSE.txt'
        pickFirst 'META-INF/NOTICE'
        pickFirst 'META-INF/NOTICE.txt'
        pickFirst 'META-INF/services/com.fasterxml.jackson.core.JsonFactory'
        pickFirst 'META-INF/services/com.fasterxml.jackson.core.ObjectCodec'
        pickFirst 'META-INF/services/javax.ws.rs.ext.MessageBodyReader'
        pickFirst 'META-INF/services/javax.ws.rs.ext.MessageBodyWriter'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    productFlavors {
    }
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    classpath = files()
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor(0, 'seconds')
        cacheChangingModulesFor(0, 'seconds')
    }
    transitive = true
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}
dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile 'com.google.android.gms:play-services:4.1.32'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile 'com.android.support:cardview-v7:25.1.0'
    compile 'com.android.support:multidex:1.0.1'

    // Testing-only dependencies
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.robolectric:robolectric:3.1.2'
    androidTestCompile 'com.android.support:support-annotations:25.1.0'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
}